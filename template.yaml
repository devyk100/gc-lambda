AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  gc-lambda
  
  Sample SAM Template for gc-lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    MemorySize: 128

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST,OPTIONS,GET'"
        AllowHeaders: "'X-Forwaded-For,Content-Type'"
        AllowOrigin: "'http://localhost:3000'"
        MaxAge: "'600'"
        AllowCredentials: true
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/hello-world
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
  SomeOtherFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/some-other-function/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /customfunction
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  CheckUserNameFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/check-username-available/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        PostMethod:
          Type: Api
          Properties:
            Path: /username-available
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
        OptionsMethod:
          Type: Api
          Properties:
            Path: /username-available
            Method: OPTIONS
            RestApiId:
              Ref: ApiGatewayApi

      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  CheckEmailFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/check-email-available
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        PostMethod:
          Type: Api
          Properties:
            Path: /email-taken
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
        OptionsMethod:
          Type: Api
          Properties:
            Path: /email-taken
            Method: OPTIONS
            RestApiId:
              Ref: ApiGatewayApi

      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  GetPutImageUrl:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/get-put-image-url/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        PostMethod:
          Type: Api
          Properties:
            Path: /get-put-image-url
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
        OptionsMethod:
          Type: Api
          Properties:
            Path: /get-put-image-url
            Method: OPTIONS
            RestApiId:
              Ref: ApiGatewayApi
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
 
  UploadImageFromUrl:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/upload-image-from-url/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        PostMethod:
          Type: Api
          Properties:
            Path: /upload-image-from-url
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
        OptionsMethod:
          Type: Api
          Properties:
            Path: /upload-image-from-rul
            Method: OPTIONS
            RestApiId:
              Ref: ApiGatewayApi
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  QueryConference:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/query-conference/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        PostMethod:
          Type: Api
          Properties:
            Path: /conference
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
        OptionsMethod:
          Type: Api
          Properties:
            Path: /conference
            Method: OPTIONS
            RestApiId:
              Ref: ApiGatewayApi
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

  QueryAuthConference:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: cmd/query-conf-auth/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        PostMethod:
          Type: Api
          Properties:
            Path: /conf-auth
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
        OptionsMethod:
          Type: Api
          Properties:
            Path: /conf-auth
            Method: OPTIONS
            RestApiId:
              Ref: ApiGatewayApi
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

  # CustomFunctionAPI:
  #   Description: "API Gateway endpoint URL for Prod environment for SomeOtherFunction"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/customfunction/"
  
  # CustomFunctionArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt SomeOtherFunction.Arn
  
  # # CustomFunctionIamRole:
  # #   Description: "Implicit IAM Role created for Custom Function"
  # #   Value: !GetAtt SomeOtherFunctionRole.Arn

  # CheckUserNameFunctionAPI:
  #   Description: "API Gateway endpoint URL for Prod environment for CheckUserNameFunction"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/username-available/"
  
  # CheckUserNameFunctionArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt CheckUserNameFunction.Arn

  CheckEmailFunctionAPI:
    Description: "API Gateway endpoint URL for Prod environment for CheckEmailFunction"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/email-taken/"
  
  CheckEmailFunctionArn:
    Description: "Custom Lambda Function ARN"
    Value: !GetAtt CheckEmailFunction.Arn
  
  # GetPutImageUrlAPI:
  #   Description: "API Gateway endpoint URL for Prod environment for GetPutImageUrl"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get-put-image-url/"
  
  # GetPutImageUrlArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt GetPutImageUrl.Arn

  # UploadImageFromUrlAPI:
  #   Description: "API Gateway endpoint URL for Prod environment for UploadImageFromUrl"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/upload-image-from-url/"
  
  # QueryConferenceArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt QueryConference.Arn

  # QueryConferenceAPI:
  #   Description: "API Gateway endpoint URL for Prod environment for QueryConference"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/conference/"
  
  # QueryConferenceArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt QueryConference.Arn
  
  # QueryAuthConferenceArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt QueryAuthConference.Arn

  # QueryAuthConferenceAPI:
  #   Description: "API Gateway endpoint URL for Prod environment for QueryAuthConference"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/conf-auth/"
  
  # QueryAuthConferenceArn:
  #   Description: "Custom Lambda Function ARN"
  #   Value: !GetAtt QueryAuthConference.Arn
  
  # # CheckUserNameFunctionIamRole:
  # #   Description: "Implicit IAM Role created for Custom Function"
  #   Value: !GetAtt CheckUserNameFunction.Arn
