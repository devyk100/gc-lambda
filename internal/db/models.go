// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type AuthTypeT string

const (
	AuthTypeTGoogle AuthTypeT = "Google"
	AuthTypeTGithub AuthTypeT = "Github"
	AuthTypeTEmail  AuthTypeT = "Email"
)

func (e *AuthTypeT) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AuthTypeT(s)
	case string:
		*e = AuthTypeT(s)
	default:
		return fmt.Errorf("unsupported scan type for AuthTypeT: %T", src)
	}
	return nil
}

type NullAuthTypeT struct {
	AuthTypeT AuthTypeT
	Valid     bool // Valid is true if AuthTypeT is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAuthTypeT) Scan(value interface{}) error {
	if value == nil {
		ns.AuthTypeT, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AuthTypeT.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAuthTypeT) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AuthTypeT), nil
}

type Course struct {
	ID          int32
	Name        string
	Language    string
	Description string
	IsPublic    bool
	ImgUrl      string
	Uid         int32
}

type CourseInstructorMapping struct {
	ID         int32
	Instructor int32
	CourseID   int32
}

type CourseLearnerMapping struct {
	ID       int32
	Learner  int32
	CourseID int32
}

type Image struct {
	ID             int32
	AssociatedUser int32
	Filename       string
	AssociatedPost int32
	IsUploaded     bool
}

type LessonPost struct {
	ID               int32
	Body             string
	UserID           int32
	CreatedAt        pgtype.Timestamp
	IsPublic         bool
	AssociatedCourse pgtype.Int4
	Title            string
}

type LiveClass struct {
	ID               int32
	StartTime        pgtype.Timestamp
	AssociatedCourse int32
	Name             string
	Description      string
	ReminderMessage  string
	IsPublic         bool
	Email            string
	Length           int32
	ModPassword      string
	Password         string
}

type OverrideLessonPostPermission struct {
	ID            int32
	AllowedEditor int32
	AllowedPostID int32
	Allowed       bool
}

type OverrideLessonPostVisibility struct {
	ID            int32
	AllowedUser   int32
	AllowedPostID int32
	Allowed       bool
}

type OverrideLiveClassAdminPermission struct {
	ID          int32
	Instructor  int32
	LiveClassID int32
}

type OverrideLiveClassVisibility struct {
	ID          int32
	Learner     int32
	LiveClassID int32
}

type User struct {
	ID          int32
	Username    string
	Password    string
	Name        string
	Email       string
	Picture     string
	AuthType    AuthTypeT
	Description string
	IsPublic    bool
}
